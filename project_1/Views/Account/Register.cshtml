@model project_1.ViewModel.RegisterVM

@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}
@using (Html.BeginForm("Register", "Account", FormMethod.Post))
{
    <div class="container">
        <div class="container py-5 h-100">
            <div class="row justify-content-center align-items-center h-100">
                <div class="col-12 col-lg-9 col-xl-7">
                    <div class="card shadow-2-strong card-registration shadow-lg" style="border-radius: 15px;">
                        <div class="card-body p-4 p-md-5">
                            <h3 class="mb-4 pb-2 pb-md-0 mb-md-5 text-center">Registration</h3>
                            <form>

                                <div class="row">
                                    <div class="col-md-6 mb-4">
                                        <div class="form-outline">
                                            @Html.LabelFor(t => t.UserName)
                                            @Html.TextBoxFor(t => t.UserName, new { placeholder = "UserName", @class = "form-control" })
                                            @Html.ValidationMessageFor(t => t.UserName, "", new { @class = "custom-error-message" })
                                        </div>
                                    </div>
                                    <div class="col-md-6 mb-4">
                                        <div class="form-outline">
                                            @Html.LabelFor(t => t.Email)
                                            @Html.TextBoxFor(t => t.Email, new { placeholder = "Email", @class = "form-control" })
                                            @Html.ValidationMessageFor(t => t.Email, "", new { @class = "custom-error-message" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-6 mb-4">
                                        <div class="form-outline">
                                            @Html.LabelFor(t => t.Password)
                                            @Html.PasswordFor(t => t.Password, new { placeholder = "Password", @class = "form-control" })
                                            @Html.ValidationMessageFor(t => t.Password, "", new { @class = "custom-error-message" })
                                        </div>
                                    </div>
                                    <div class="col-md-6 mb-4">
                                        <div class="form-outline">
                                            @Html.LabelFor(t => t.ComfirmPass)
                                            @Html.PasswordFor(t => t.ComfirmPass, new { placeholder = "Comfirm Password", @class = "form-control" })
                                            @Html.ValidationMessageFor(t => t.ComfirmPass, "", new { @class = "custom-error-message" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-6 mb-4">
                                        <div class="form-outline">
                                            @Html.LabelFor(t => t.PhoneNumber)
                                            @Html.TextBoxFor(t => t.PhoneNumber, new { placeholder = "Phone Number", @class = "form-control" })
                                            @Html.ValidationMessageFor(t => t.PhoneNumber, "", new { @class = "custom-error-message" })
                                        </div>
                                    </div>
                                    <div class="col-md-6 mb-4">
                                        <div class="form-outline">
                                            @Html.LabelFor(t => t.Birth)
                                            @Html.EditorFor(t => t.Birth, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                                            @Html.ValidationMessageFor(t => t.Birth, "", new { @class = "custom-error-message" })
                                        </div>

                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-6 mb-4">
                                        <div class="form-outline">
                                            @Html.LabelFor(t => t.Address)
                                            @Html.TextBoxFor(t => t.Address, new { placeholder = "Address", @class = "form-control" })
                                            @Html.ValidationMessageFor(t => t.Address, "", new { @class = "custom-error-message" })
                                        </div>
                                    </div>
                                    <div class="col-md-6 mb-4">
                                        <div class="form-outline">
                                            @Html.LabelFor(t => t.City)
                                            @Html.TextBoxFor(t => t.City, new { placeholder = "City", @class = "form-control" })
                                            @Html.ValidationMessageFor(t => t.City, "", new { @class = "custom-error-message" })
                                        </div>
                                    </div>
                                </div>
                                <div class="mt-4 pt-2">
                                    <input class="btn btn-success btn-lg" type="submit" value="Submit" />
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<style>
    .card1 div, .btn1 {
        width: 75%;
    }

    span{
        color:red!important;
    }

    .card1 {
        --bs-card-spacer-y: 1rem;
        --bs-card-spacer-x: 1rem;
        --bs-card-title-spacer-y: 0.5rem;
        --bs-card-title-color:;
        --bs-card-subtitle-color:;
        --bs-card-border-width: var(--bs-border-width);
        --bs-card-border-color: var(--bs-border-color-translucent);
        --bs-card-border-radius: var(--bs-border-radius);
        --bs-card-box-shadow:;
        --bs-card-inner-border-radius: calc(var(--bs-border-radius) - (var(--bs-border-width)));
        --bs-card-cap-padding-y: 0.5rem;
        --bs-card-cap-padding-x: 1rem;
        --bs-card-cap-bg: rgba(var(--bs-body-color-rgb), 0.03);
        --bs-card-cap-color:;
        --bs-card-height:;
        --bs-card-color:;
        --bs-card-bg: var(--bs-body-bg);
        --bs-card-img-overlay-padding: 1rem;
        --bs-card-group-margin: 0.75rem;
        position: relative;
        display: flex;
        flex-direction: column;
        min-width: 0;
        height: var(--bs-card-height);
        color: var(--bs-body-color);
        word-wrap: break-word;
        background-color: var(--bs-card-bg);
        background-clip: border-box;
        border: var(--bs-card-border-width) solid var(--bs-card-border-color);
        border-radius: var(--bs-card-border-radius);
    }
</style>